{"version":3,"file":"static/js/745.ab75dc5d.chunk.js","mappings":"iKAEA,MAkCA,EAlC+B,WAAsB,IAArBA,EAASC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAC1C,MAAOG,EAAeC,IAAoBC,EAAAA,EAAAA,WAAS,IAC5CC,EAAkBC,IAAuBF,EAAAA,EAAAA,WAAS,GACnDG,GAAaC,EAAAA,EAAAA,QAAO,MA4B1B,OAtBAC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAW,IAAIC,sBACnBC,IAAc,IAAZC,GAAMD,EACFC,EAAMC,iBACRR,GAAoB,GACpBI,EAASK,aACX,GAEF,CAAEjB,cAOJ,OAJIS,EAAWS,SACbN,EAASO,QAAQV,EAAWS,SAGvB,KACDT,EAAWS,SACbN,EAASQ,UAAUX,EAAWS,QAChC,CACD,GACA,CAAClB,IAEG,CAAEI,gBAAeG,mBAAkBE,aAAYY,gBA1B9BA,KACtBhB,GAAiB,EAAK,EA0B1B,C,4IC7BA,MA4DA,EA5DgBiB,KACd,MAAMC,GAAeC,EAAAA,EAAAA,UACnB,KACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SAAE,sZASJ,IAGIC,GAAeJ,EAAAA,EAAAA,UACnB,KACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SAAE,8cAUJ,KAGI,cAAEvB,EAAa,iBAAEG,EAAgB,WAAEE,EAAU,gBAAEY,IACnDQ,EAAAA,EAAAA,KAEF,OACEC,EAAAA,EAAAA,MAAA,WAASC,GAAG,UAAUC,IAAKvB,EAAWkB,SAAA,EACpCF,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAAA,MAAIQ,UAAU,oBAAmBN,SAAC,mBAEpCG,EAAAA,EAAAA,MAAA,OAAKG,UAAU,cAAaN,SAAA,EAC1BG,EAAAA,EAAAA,MAAA,OAAKG,UAAU,mBAAkBN,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,MAAIQ,UAAU,oBAAmBN,SAAC,iBAClCF,EAAAA,EAAAA,KAAA,KAAGQ,UAAU,oBAAmBN,SAAEJ,KAClCE,EAAAA,EAAAA,KAAA,KAAGQ,UAAU,oBAAmBN,SAAEC,QAEpCH,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,oBAAmBN,SAC/BpB,IACCkB,EAAAA,EAAAA,KAAA,OACES,IAAKC,EACLC,IAAI,oBACJH,UAAS,iBAAAI,OAAmBjC,EAAgB,SAAW,IACvDkC,QAAQ,OACRC,OAAQlB,WAKR,C","sources":["components/hooks/useImageOnIntersection.jsx","components/product/Product.jsx"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\n\r\nconst useImageOnIntersection = (threshold = 0.1) => {\r\n  const [isImageLoaded, setIsImageLoaded] = useState(false);\r\n  const [isSectionVisible, setIsSectionVisible] = useState(false);\r\n  const sectionRef = useRef(null);\r\n\r\n  const handleImageLoad = () => {\r\n    setIsImageLoaded(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      ([entry]) => {\r\n        if (entry.isIntersecting) {\r\n          setIsSectionVisible(true);\r\n          observer.disconnect();\r\n        }\r\n      },\r\n      { threshold }\r\n    );\r\n\r\n    if (sectionRef.current) {\r\n      observer.observe(sectionRef.current);\r\n    }\r\n\r\n    return () => {\r\n      if (sectionRef.current) {\r\n        observer.unobserve(sectionRef.current);\r\n      }\r\n    };\r\n  }, [threshold]);\r\n\r\n  return { isImageLoaded, isSectionVisible, sectionRef, handleImageLoad };\r\n};\r\n\r\nexport default useImageOnIntersection;\r\n","import React, { useMemo } from \"react\";\r\nimport useImageOnIntersection from \"../hooks/useImageOnIntersection\";\r\nimport ProductImage from \"../../assets/images/product.webp\";\r\nimport \"./Product.css\";\r\n\r\nconst Product = () => {\r\n  const ProductText1 = useMemo(\r\n    () => (\r\n      <>\r\n        Our Milma dosa batter is meticulously crafted to deliver the perfect\r\n        balance of crispiness and softness in every bite. Made with love and\r\n        precision, it ensures your dosas are always deliciously perfect. From\r\n        classic dosas to innovative recipes, our batter is versatile enough to\r\n        suit all your culinary creations. Unleash your creativity and explore\r\n        endless possibilities with our premium dosa batter.\r\n      </>\r\n    ),\r\n    []\r\n  );\r\n\r\n  const ProductText2 = useMemo(\r\n    () => (\r\n      <>\r\n        We believe in the power of fresh ingredients. Our Milma dosa batter is\r\n        made from freshly ground rice and lentils, preserving the authentic\r\n        taste and nutritional value, so you can enjoy dosas that are as\r\n        wholesome as they are flavorful. Convenience meets tradition with our\r\n        ready-to-use dosa batter. Whether you're a busy professional or a home\r\n        cook, our batter simplifies your cooking experience, bringing the joy of\r\n        homemade dosas to your table with ease.\r\n      </>\r\n    ),\r\n    []\r\n  );\r\n\r\n  const { isImageLoaded, isSectionVisible, sectionRef, handleImageLoad } =\r\n    useImageOnIntersection();\r\n\r\n  return (\r\n    <section id=\"product\" ref={sectionRef}>\r\n      <div>\r\n        <h1 className=\"product-heading-1\">Our Product</h1>\r\n      </div>\r\n      <div className=\"product-row\">\r\n        <div className=\"product-col-left\">\r\n          <h1 className=\"product-heading-2\">Our Product</h1>\r\n          <p className=\"product-content-1\">{ProductText1}</p>\r\n          <p className=\"product-content-2\">{ProductText2}</p>\r\n        </div>\r\n        <div className=\"product-col-right\">\r\n          {isSectionVisible && (\r\n            <img\r\n              src={ProductImage}\r\n              alt=\"Milma dosa batter\"\r\n              className={`product-image ${isImageLoaded ? \"loaded\" : \"\"}`}\r\n              loading=\"lazy\"\r\n              onLoad={handleImageLoad}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n"],"names":["threshold","arguments","length","undefined","isImageLoaded","setIsImageLoaded","useState","isSectionVisible","setIsSectionVisible","sectionRef","useRef","useEffect","observer","IntersectionObserver","_ref","entry","isIntersecting","disconnect","current","observe","unobserve","handleImageLoad","Product","ProductText1","useMemo","_jsx","_Fragment","children","ProductText2","useImageOnIntersection","_jsxs","id","ref","className","src","ProductImage","alt","concat","loading","onLoad"],"sourceRoot":""}