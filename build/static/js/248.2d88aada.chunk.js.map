{"version":3,"file":"static/js/248.2d88aada.chunk.js","mappings":"gRAUA,MA4DA,EA5DcA,KACZ,MAAMC,GAAaC,EAAAA,EAAAA,UACjB,KACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SAAE,2bAUJ,IAGIC,GAAaJ,EAAAA,EAAAA,UACjB,KACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SAAE,0dAUJ,KAGI,cAAEE,EAAa,WAAEC,EAAU,gBAAEC,IACjCC,EAAAA,EAAAA,KAEF,OACEC,EAAAA,EAAAA,MAAA,WAASC,GAAG,QAAQC,IAAKL,EAAWH,SAAA,EAClCF,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAAA,MAAIW,UAAU,kBAAiBT,SAAC,gBAElCM,EAAAA,EAAAA,MAAA,OAAKG,UAAU,YAAWT,SAAA,EACxBF,EAAAA,EAAAA,KAAA,OAAKW,UAAU,iBAAgBT,UAC7BF,EAAAA,EAAAA,KAACY,EAAAA,cAAa,CACZD,UAAS,eAAAE,OAAiBT,EAAgB,SAAW,QACrDU,IAAKC,EACLC,IAAI,eACJC,OAAO,OACPC,OAAQZ,EACRa,QAAUC,GAAOA,EAAEC,OAAOP,IAAM,sCAGpCN,EAAAA,EAAAA,MAAA,OAAKG,UAAU,kBAAiBT,SAAA,EAC9BF,EAAAA,EAAAA,KAAA,MAAIW,UAAU,kBAAiBT,SAAC,cAChCF,EAAAA,EAAAA,KAAA,KAAGW,UAAU,kBAAiBT,SAAEJ,KAChCE,EAAAA,EAAAA,KAAA,KAAGW,UAAU,kBAAiBT,SAAEC,YAG5B,C,sDC/Dd,MAgCA,EAhC+B,WAAsB,IAArBmB,EAASC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAC1C,MAAOnB,EAAesB,IAAoBC,EAAAA,EAAAA,WAAS,GAC7CtB,GAAauB,EAAAA,EAAAA,QAAO,MAEpBtB,GAAkBuB,EAAAA,EAAAA,cAAY,KAClCH,GAAiB,EAAK,GACrB,IAuBH,OArBAI,EAAAA,EAAAA,YAAU,KACR,MAAMC,GAA8BC,EAAAA,EAAAA,WAAS,CAAAC,EAAUC,KAAc,IAAtBC,GAAMF,EAC/CE,EAAMC,gBACRF,EAASG,YACX,GACC,KAEGH,EAAW,IAAII,qBAAqBP,EAA6B,CACrET,cAOF,OAJIjB,EAAWkC,SACbL,EAASM,QAAQnC,EAAWkC,SAGvB,KACLL,EAASG,aACTN,EAA4BU,QAAQ,CACrC,GACA,CAACnB,IAEG,CAAElB,gBAAeC,aAAYC,kBACtC,C","sources":["components/about/About.jsx","components/hooks/useImageOnIntersection.jsx"],"sourcesContent":["import React, { useMemo } from \"react\";\r\n\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\nimport \"react-lazy-load-image-component/src/effects/blur.css\";\r\n\r\nimport useImageOnIntersection from \"../hooks/useImageOnIntersection\";\r\n\r\nimport AboutImage from \"../../assets/images/about.webp\";\r\nimport \"./About.css\";\r\n\r\nconst About = () => {\r\n  const AboutText1 = useMemo(\r\n    () => (\r\n      <>\r\n        Rooted in tradition and crafted with passion, we bring the authentic\r\n        taste of South Indian dosa batter to your kitchen. Our journey began\r\n        with a simple goal: to share the love for this quintessential delicacy,\r\n        one batter at a time. We are dedicated to bringing convenience without\r\n        compromising on authenticity. Our mission is to make the art of dosa\r\n        making accessible to everyone, so you can enjoy delicious, homemade\r\n        dosas effortlessly.\r\n      </>\r\n    ),\r\n    []\r\n  );\r\n\r\n  const AboutText2 = useMemo(\r\n    () => (\r\n      <>\r\n        At the heart of our dosa batter lies a commitment to quality. We use\r\n        only the finest ingredients, handpicked and carefully blended to create\r\n        a batter that promises perfect dosas every time. Taste the difference of\r\n        purity and freshness. Experience the essence of South India with every\r\n        bite. Our dosa batter is crafted using traditional recipes passed down\r\n        through generations, ensuring that you enjoy the same authentic taste\r\n        that has delighted families for centuries.\r\n      </>\r\n    ),\r\n    []\r\n  );\r\n\r\n  const { isImageLoaded, sectionRef, handleImageLoad } =\r\n    useImageOnIntersection();\r\n\r\n  return (\r\n    <section id=\"about\" ref={sectionRef}>\r\n      <div>\r\n        <h1 className=\"about-heading-1\">About Us</h1>\r\n      </div>\r\n      <div className=\"about-row\">\r\n        <div className=\"about-col-left\">\r\n          <LazyLoadImage\r\n            className={`about-image ${isImageLoaded ? \"loaded\" : \"blur\"}`}\r\n            src={AboutImage}\r\n            alt=\"Sample Image\"\r\n            effect=\"blur\"\r\n            onLoad={handleImageLoad}\r\n            onError={(e) => (e.target.src = \"../../assets/images/about.webp\")}\r\n          />\r\n        </div>\r\n        <div className=\"about-col-right\">\r\n          <h1 className=\"about-heading-2\">About Us</h1>\r\n          <p className=\"about-content-1\">{AboutText1}</p>\r\n          <p className=\"about-content-2\">{AboutText2}</p>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport { debounce } from \"lodash\";\r\n\r\nconst useImageOnIntersection = (threshold = 0.1) => {\r\n  const [isImageLoaded, setIsImageLoaded] = useState(false);\r\n  const sectionRef = useRef(null);\r\n\r\n  const handleImageLoad = useCallback(() => {\r\n    setIsImageLoaded(true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const debouncedHandleIntersection = debounce(([entry], observer) => {\r\n      if (entry.isIntersecting) {\r\n        observer.disconnect();\r\n      }\r\n    }, 100);\r\n\r\n    const observer = new IntersectionObserver(debouncedHandleIntersection, {\r\n      threshold,\r\n    });\r\n\r\n    if (sectionRef.current) {\r\n      observer.observe(sectionRef.current);\r\n    }\r\n\r\n    return () => {\r\n      observer.disconnect();\r\n      debouncedHandleIntersection.cancel();\r\n    };\r\n  }, [threshold]);\r\n\r\n  return { isImageLoaded, sectionRef, handleImageLoad };\r\n};\r\n\r\nexport default useImageOnIntersection;\r\n"],"names":["About","AboutText1","useMemo","_jsx","_Fragment","children","AboutText2","isImageLoaded","sectionRef","handleImageLoad","useImageOnIntersection","_jsxs","id","ref","className","LazyLoadImage","concat","src","AboutImage","alt","effect","onLoad","onError","e","target","threshold","arguments","length","undefined","setIsImageLoaded","useState","useRef","useCallback","useEffect","debouncedHandleIntersection","debounce","_ref","observer","entry","isIntersecting","disconnect","IntersectionObserver","current","observe","cancel"],"sourceRoot":""}